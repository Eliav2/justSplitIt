# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/just-split-it
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true  # This flag ensures that Git LFS is enabled during the checkout process
      # install pnpm verison 8
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-
      - name: Install Dependencies
        run: pnpm install
#      #  - run: 'pnpm run build:prod' # not required as `FirebaseExtended/action-hosting-deploy@v0` will run `vite build` by default
#      - uses: FirebaseExtended/action-hosting-deploy@v0
#        with:
#          repoToken: '${{ secrets.GITHUB_TOKEN }}'
#          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JUST_SPLITIT }}'
#          channelId: live
#          projectId: just-splitit
#          entryPoint: packages/just-split-it

      # if for any reason `FirebaseExtended/action-hosting-deploy@v0` fails use this to authenticate GitHub action with my GCP project
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/1077756061576/locations/global/workloadIdentityPools/github-actions'
          service_account: 'github-action-672062534@just-splitit.iam.gserviceaccount.com'
#      - run: |
#          echo "SERVICE_ACCOUNT_KEY=$(cat "${{ steps.auth.outputs.credentials_file_path }}" | tr -d '\n')" >> $GITHUB_ENV
      - run: 'pnpm run build:prod'
#      - run: "sleep 10000"
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - run: 'pnpm run deploy'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
    permissions:
      contents: 'read'
      id-token: 'write'

